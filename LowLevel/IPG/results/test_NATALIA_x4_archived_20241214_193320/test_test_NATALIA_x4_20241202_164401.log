2024-12-02 16:44:01,408 INFO: 
  name: test_NATALIA_x4
  model_type: IPGModel
  scale: 4
  num_gpu: 1
  manual_seed: 10
  datasets:[
    test:[
      name: CustomTestSet
      type: SingleImageDataset
      dataroot_lq: D:/GIAA5/Natalia Rdgz/troncho_portal/caratulas24_lr_t
      io_backend:[
        type: disk
      ]
      phase: test
      scale: 4
    ]
  ]
  network_g:[
    type: IPG
    upscale: 4
    in_chans: 3
    img_size: 64
    window_size: 16
    img_range: 1.0
    depths: [6, 6, 6, 6, 6, 6]
    embed_dim: 180
    num_heads: [6, 6, 6, 6, 6, 6]
    mlp_ratio: 4
    upsampler: pixelshuffle
    resi_connection: 1conv
    graph_flags: [1, 1, 1, 1, 1, 1]
    stage_spec: [['GN', 'GS', 'GN', 'GS', 'GN', 'GS'], ['GN', 'GS', 'GN', 'GS', 'GN', 'GS'], ['GN', 'GS', 'GN', 'GS', 'GN', 'GS'], ['GN', 'GS', 'GN', 'GS', 'GN', 'GS'], ['GN', 'GS', 'GN', 'GS', 'GN', 'GS'], ['GN', 'GS', 'GN', 'GS', 'GN', 'GS']]
    dist_type: cossim
    top_k: 256
    head_wise: 0
    sample_size: 32
    graph_switch: 1
    flex_type: interdiff_plain
    FFNtype: basic-dwconv3
    conv_scale: 0
    conv_type: dwconv3-gelu-conv1-ca
    diff_scales: [10, 1.5, 1.5, 1.5, 1.5, 1.5]
    fast_graph: 1
  ]
  path:[
    pretrain_network_g: D:/GIAA5/Natalia Rdgz/IPG_CUDA/NATALIA/pths/IPG_SRx4.pth
    strict_load_g: True
    results_root: D:\GIAA5\Natalia Rdgz\IPG_CUDA\LowLevel\IPG\results\test_NATALIA_x4
    log: D:\GIAA5\Natalia Rdgz\IPG_CUDA\LowLevel\IPG\results\test_NATALIA_x4
    visualization: D:\GIAA5\Natalia Rdgz\IPG_CUDA\LowLevel\IPG\results\test_NATALIA_x4\visualization
  ]
  val:[
    save_img: True
    suffix: _x4
  ]
  dist: False
  rank: 0
  world_size: 1
  auto_resume: False
  is_train: False

2024-12-02 16:44:01,409 INFO: Dataset [SingleImageDataset] - CustomTestSet is built.
2024-12-02 16:44:01,409 INFO: Number of test images in CustomTestSet: 2
2024-12-02 16:44:01,602 INFO: Network [IPG] is created.
2024-12-02 16:44:01,755 INFO: Network: IPG, with parameters: 16,955,463
2024-12-02 16:44:01,755 INFO: IPG(
  (conv_first): Conv2d(3, 180, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (patch_embed): PatchEmbed(
    (norm): LayerNorm((180,), eps=1e-05, elementwise_affine=True)
  )
  (patch_unembed): PatchUnEmbed()
  (pos_drop): Dropout(p=0.0, inplace=False)
  (layers): ModuleList(
    (0): MGB(
      (residual_group): BasicLayer(
        dim=180, depth=6
        (blocks): ModuleList(
          (0): GAL(
            dim=180, sampling_method=0, mlp_ratio=4
            (norm1): LayerNorm((180,), eps=1e-05, elementwise_affine=True)
            (grapher): IPG_Grapher(
              dim=180, top_k=256, sample_size=(32, 32)
              (proj_group): Linear(in_features=180, out_features=180, bias=True)
              (proj_sample): Linear(in_features=180, out_features=360, bias=True)
              (proj): Linear(in_features=180, out_features=180, bias=True)
              (cpb_mlp): Sequential(
                (0): Linear(in_features=2, out_features=512, bias=True)
                (1): ReLU(inplace=True)
                (2): Linear(in_features=512, out_features=6, bias=False)
              )
            )
            (drop_path): Identity()
            (norm2): LayerNorm((180,), eps=1e-05, elementwise_affine=True)
            (mlp): ConvFFN(
              (fc1): Linear(in_features=180, out_features=720, bias=True)
              (act): GELU(approximate='none')
              (before_add): Identity()
              (after_add): Identity()
              (dwconv): dwconv(
                (depthwise_conv): Sequential(
                  (0): Conv2d(720, 720, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=720)
                  (1): GELU(approximate='none')
                )
              )
              (fc2): Linear(in_features=720, out_features=180, bias=True)
              (drop): Dropout(p=0.0, inplace=False)
            )
          )
          (1): GAL(
            dim=180, sampling_method=1, mlp_ratio=4
            (norm1): LayerNorm((180,), eps=1e-05, elementwise_affine=True)
            (grapher): IPG_Grapher(
              dim=180, top_k=256, sample_size=(32, 32)
              (proj_group): Linear(in_features=180, out_features=180, bias=True)
              (proj_sample): Linear(in_features=180, out_features=360, bias=True)
              (proj): Linear(in_features=180, out_features=180, bias=True)
              (cpb_mlp): Sequential(
                (0): Linear(in_features=2, out_features=512, bias=True)
                (1): ReLU(inplace=True)
                (2): Linear(in_features=512, out_features=6, bias=False)
              )
            )
            (drop_path): DropPath()
            (norm2): LayerNorm((180,), eps=1e-05, elementwise_affine=True)
            (mlp): ConvFFN(
              (fc1): Linear(in_features=180, out_features=720, bias=True)
              (act): GELU(approximate='none')
              (before_add): Identity()
              (after_add): Identity()
              (dwconv): dwconv(
                (depthwise_conv): Sequential(
                  (0): Conv2d(720, 720, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=720)
                  (1): GELU(approximate='none')
                )
              )
              (fc2): Linear(in_features=720, out_features=180, bias=True)
              (drop): Dropout(p=0.0, inplace=False)
            )
          )
          (2): GAL(
            dim=180, sampling_method=0, mlp_ratio=4
            (norm1): LayerNorm((180,), eps=1e-05, elementwise_affine=True)
            (grapher): IPG_Grapher(
              dim=180, top_k=256, sample_size=(32, 32)
              (proj_group): Linear(in_features=180, out_features=180, bias=True)
              (proj_sample): Linear(in_features=180, out_features=360, bias=True)
              (proj): Linear(in_features=180, out_features=180, bias=True)
              (cpb_mlp): Sequential(
                (0): Linear(in_features=2, out_features=512, bias=True)
                (1): ReLU(inplace=True)
                (2): Linear(in_features=512, out_features=6, bias=False)
              )
            )
            (drop_path): DropPath()
            (norm2): LayerNorm((180,), eps=1e-05, elementwise_affine=True)
            (mlp): ConvFFN(
              (fc1): Linear(in_features=180, out_features=720, bias=True)
              (act): GELU(approximate='none')
              (before_add): Identity()
              (after_add): Identity()
              (dwconv): dwconv(
                (depthwise_conv): Sequential(
                  (0): Conv2d(720, 720, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=720)
                  (1): GELU(approximate='none')
                )
              )
              (fc2): Linear(in_features=720, out_features=180, bias=True)
              (drop): Dropout(p=0.0, inplace=False)
            )
          )
          (3): GAL(
            dim=180, sampling_method=1, mlp_ratio=4
            (norm1): LayerNorm((180,), eps=1e-05, elementwise_affine=True)
            (grapher): IPG_Grapher(
              dim=180, top_k=256, sample_size=(32, 32)
              (proj_group): Linear(in_features=180, out_features=180, bias=True)
              (proj_sample): Linear(in_features=180, out_features=360, bias=True)
              (proj): Linear(in_features=180, out_features=180, bias=True)
              (cpb_mlp): Sequential(
                (0): Linear(in_features=2, out_features=512, bias=True)
                (1): ReLU(inplace=True)
                (2): Linear(in_features=512, out_features=6, bias=False)
              )
            )
            (drop_path): DropPath()
            (norm2): LayerNorm((180,), eps=1e-05, elementwise_affine=True)
            (mlp): ConvFFN(
              (fc1): Linear(in_features=180, out_features=720, bias=True)
              (act): GELU(approximate='none')
              (before_add): Identity()
              (after_add): Identity()
              (dwconv): dwconv(
                (depthwise_conv): Sequential(
                  (0): Conv2d(720, 720, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=720)
                  (1): GELU(approximate='none')
                )
              )
              (fc2): Linear(in_features=720, out_features=180, bias=True)
              (drop): Dropout(p=0.0, inplace=False)
            )
          )
          (4): GAL(
            dim=180, sampling_method=0, mlp_ratio=4
            (norm1): LayerNorm((180,), eps=1e-05, elementwise_affine=True)
            (grapher): IPG_Grapher(
              dim=180, top_k=256, sample_size=(32, 32)
              (proj_group): Linear(in_features=180, out_features=180, bias=True)
              (proj_sample): Linear(in_features=180, out_features=360, bias=True)
              (proj): Linear(in_features=180, out_features=180, bias=True)
              (cpb_mlp): Sequential(
                (0): Linear(in_features=2, out_features=512, bias=True)
                (1): ReLU(inplace=True)
                (2): Linear(in_features=512, out_features=6, bias=False)
              )
            )
            (drop_path): DropPath()
            (norm2): LayerNorm((180,), eps=1e-05, elementwise_affine=True)
            (mlp): ConvFFN(
              (fc1): Linear(in_features=180, out_features=720, bias=True)
              (act): GELU(approximate='none')
              (before_add): Identity()
              (after_add): Identity()
              (dwconv): dwconv(
                (depthwise_conv): Sequential(
                  (0): Conv2d(720, 720, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=720)
                  (1): GELU(approximate='none')
                )
              )
              (fc2): Linear(in_features=720, out_features=180, bias=True)
              (drop): Dropout(p=0.0, inplace=False)
            )
          )
          (5): GAL(
            dim=180, sampling_method=1, mlp_ratio=4
            (norm1): LayerNorm((180,), eps=1e-05, elementwise_affine=True)
            (grapher): IPG_Grapher(
              dim=180, top_k=256, sample_size=(32, 32)
              (proj_group): Linear(in_features=180, out_features=180, bias=True)
              (proj_sample): Linear(in_features=180, out_features=360, bias=True)
              (proj): Linear(in_features=180, out_features=180, bias=True)
              (cpb_mlp): Sequential(
                (0): Linear(in_features=2, out_features=512, bias=True)
                (1): ReLU(inplace=True)
                (2): Linear(in_features=512, out_features=6, bias=False)
              )
            )
            (drop_path): DropPath()
            (norm2): LayerNorm((180,), eps=1e-05, elementwise_affine=True)
            (mlp): ConvFFN(
              (fc1): Linear(in_features=180, out_features=720, bias=True)
              (act): GELU(approximate='none')
              (before_add): Identity()
              (after_add): Identity()
              (dwconv): dwconv(
                (depthwise_conv): Sequential(
                  (0): Conv2d(720, 720, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=720)
                  (1): GELU(approximate='none')
                )
              )
              (fc2): Linear(in_features=720, out_features=180, bias=True)
              (drop): Dropout(p=0.0, inplace=False)
            )
          )
        )
      )
      (conv): Conv2d(180, 180, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (patch_embed): PatchEmbed()
      (patch_unembed): PatchUnEmbed()
    )
    (1-5): 5 x MGB(
      (residual_group): BasicLayer(
        dim=180, depth=6
        (blocks): ModuleList(
          (0): GAL(
            dim=180, sampling_method=0, mlp_ratio=4
            (norm1): LayerNorm((180,), eps=1e-05, elementwise_affine=True)
            (grapher): IPG_Grapher(
              dim=180, top_k=256, sample_size=(32, 32)
              (proj_group): Linear(in_features=180, out_features=180, bias=True)
              (proj_sample): Linear(in_features=180, out_features=360, bias=True)
              (proj): Linear(in_features=180, out_features=180, bias=True)
              (cpb_mlp): Sequential(
                (0): Linear(in_features=2, out_features=512, bias=True)
                (1): ReLU(inplace=True)
                (2): Linear(in_features=512, out_features=6, bias=False)
              )
            )
            (drop_path): DropPath()
            (norm2): LayerNorm((180,), eps=1e-05, elementwise_affine=True)
            (mlp): ConvFFN(
              (fc1): Linear(in_features=180, out_features=720, bias=True)
              (act): GELU(approximate='none')
              (before_add): Identity()
              (after_add): Identity()
              (dwconv): dwconv(
                (depthwise_conv): Sequential(
                  (0): Conv2d(720, 720, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=720)
                  (1): GELU(approximate='none')
                )
              )
              (fc2): Linear(in_features=720, out_features=180, bias=True)
              (drop): Dropout(p=0.0, inplace=False)
            )
          )
          (1): GAL(
            dim=180, sampling_method=1, mlp_ratio=4
            (norm1): LayerNorm((180,), eps=1e-05, elementwise_affine=True)
            (grapher): IPG_Grapher(
              dim=180, top_k=256, sample_size=(32, 32)
              (proj_group): Linear(in_features=180, out_features=180, bias=True)
              (proj_sample): Linear(in_features=180, out_features=360, bias=True)
              (proj): Linear(in_features=180, out_features=180, bias=True)
              (cpb_mlp): Sequential(
                (0): Linear(in_features=2, out_features=512, bias=True)
                (1): ReLU(inplace=True)
                (2): Linear(in_features=512, out_features=6, bias=False)
              )
            )
            (drop_path): DropPath()
            (norm2): LayerNorm((180,), eps=1e-05, elementwise_affine=True)
            (mlp): ConvFFN(
              (fc1): Linear(in_features=180, out_features=720, bias=True)
              (act): GELU(approximate='none')
              (before_add): Identity()
              (after_add): Identity()
              (dwconv): dwconv(
                (depthwise_conv): Sequential(
                  (0): Conv2d(720, 720, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=720)
                  (1): GELU(approximate='none')
                )
              )
              (fc2): Linear(in_features=720, out_features=180, bias=True)
              (drop): Dropout(p=0.0, inplace=False)
            )
          )
          (2): GAL(
            dim=180, sampling_method=0, mlp_ratio=4
            (norm1): LayerNorm((180,), eps=1e-05, elementwise_affine=True)
            (grapher): IPG_Grapher(
              dim=180, top_k=256, sample_size=(32, 32)
              (proj_group): Linear(in_features=180, out_features=180, bias=True)
              (proj_sample): Linear(in_features=180, out_features=360, bias=True)
              (proj): Linear(in_features=180, out_features=180, bias=True)
              (cpb_mlp): Sequential(
                (0): Linear(in_features=2, out_features=512, bias=True)
                (1): ReLU(inplace=True)
                (2): Linear(in_features=512, out_features=6, bias=False)
              )
            )
            (drop_path): DropPath()
            (norm2): LayerNorm((180,), eps=1e-05, elementwise_affine=True)
            (mlp): ConvFFN(
              (fc1): Linear(in_features=180, out_features=720, bias=True)
              (act): GELU(approximate='none')
              (before_add): Identity()
              (after_add): Identity()
              (dwconv): dwconv(
                (depthwise_conv): Sequential(
                  (0): Conv2d(720, 720, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=720)
                  (1): GELU(approximate='none')
                )
              )
              (fc2): Linear(in_features=720, out_features=180, bias=True)
              (drop): Dropout(p=0.0, inplace=False)
            )
          )
          (3): GAL(
            dim=180, sampling_method=1, mlp_ratio=4
            (norm1): LayerNorm((180,), eps=1e-05, elementwise_affine=True)
            (grapher): IPG_Grapher(
              dim=180, top_k=256, sample_size=(32, 32)
              (proj_group): Linear(in_features=180, out_features=180, bias=True)
              (proj_sample): Linear(in_features=180, out_features=360, bias=True)
              (proj): Linear(in_features=180, out_features=180, bias=True)
              (cpb_mlp): Sequential(
                (0): Linear(in_features=2, out_features=512, bias=True)
                (1): ReLU(inplace=True)
                (2): Linear(in_features=512, out_features=6, bias=False)
              )
            )
            (drop_path): DropPath()
            (norm2): LayerNorm((180,), eps=1e-05, elementwise_affine=True)
            (mlp): ConvFFN(
              (fc1): Linear(in_features=180, out_features=720, bias=True)
              (act): GELU(approximate='none')
              (before_add): Identity()
              (after_add): Identity()
              (dwconv): dwconv(
                (depthwise_conv): Sequential(
                  (0): Conv2d(720, 720, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=720)
                  (1): GELU(approximate='none')
                )
              )
              (fc2): Linear(in_features=720, out_features=180, bias=True)
              (drop): Dropout(p=0.0, inplace=False)
            )
          )
          (4): GAL(
            dim=180, sampling_method=0, mlp_ratio=4
            (norm1): LayerNorm((180,), eps=1e-05, elementwise_affine=True)
            (grapher): IPG_Grapher(
              dim=180, top_k=256, sample_size=(32, 32)
              (proj_group): Linear(in_features=180, out_features=180, bias=True)
              (proj_sample): Linear(in_features=180, out_features=360, bias=True)
              (proj): Linear(in_features=180, out_features=180, bias=True)
              (cpb_mlp): Sequential(
                (0): Linear(in_features=2, out_features=512, bias=True)
                (1): ReLU(inplace=True)
                (2): Linear(in_features=512, out_features=6, bias=False)
              )
            )
            (drop_path): DropPath()
            (norm2): LayerNorm((180,), eps=1e-05, elementwise_affine=True)
            (mlp): ConvFFN(
              (fc1): Linear(in_features=180, out_features=720, bias=True)
              (act): GELU(approximate='none')
              (before_add): Identity()
              (after_add): Identity()
              (dwconv): dwconv(
                (depthwise_conv): Sequential(
                  (0): Conv2d(720, 720, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=720)
                  (1): GELU(approximate='none')
                )
              )
              (fc2): Linear(in_features=720, out_features=180, bias=True)
              (drop): Dropout(p=0.0, inplace=False)
            )
          )
          (5): GAL(
            dim=180, sampling_method=1, mlp_ratio=4
            (norm1): LayerNorm((180,), eps=1e-05, elementwise_affine=True)
            (grapher): IPG_Grapher(
              dim=180, top_k=256, sample_size=(32, 32)
              (proj_group): Linear(in_features=180, out_features=180, bias=True)
              (proj_sample): Linear(in_features=180, out_features=360, bias=True)
              (proj): Linear(in_features=180, out_features=180, bias=True)
              (cpb_mlp): Sequential(
                (0): Linear(in_features=2, out_features=512, bias=True)
                (1): ReLU(inplace=True)
                (2): Linear(in_features=512, out_features=6, bias=False)
              )
            )
            (drop_path): DropPath()
            (norm2): LayerNorm((180,), eps=1e-05, elementwise_affine=True)
            (mlp): ConvFFN(
              (fc1): Linear(in_features=180, out_features=720, bias=True)
              (act): GELU(approximate='none')
              (before_add): Identity()
              (after_add): Identity()
              (dwconv): dwconv(
                (depthwise_conv): Sequential(
                  (0): Conv2d(720, 720, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=720)
                  (1): GELU(approximate='none')
                )
              )
              (fc2): Linear(in_features=720, out_features=180, bias=True)
              (drop): Dropout(p=0.0, inplace=False)
            )
          )
        )
      )
      (conv): Conv2d(180, 180, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (patch_embed): PatchEmbed()
      (patch_unembed): PatchUnEmbed()
    )
  )
  (norm): LayerNorm((180,), eps=1e-05, elementwise_affine=True)
  (conv_after_body): Conv2d(180, 180, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (conv_before_upsample): Sequential(
    (0): Conv2d(180, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): LeakyReLU(negative_slope=0.01, inplace=True)
  )
  (upsample): Upsample(
    (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): PixelShuffle(upscale_factor=2)
    (2): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (3): PixelShuffle(upscale_factor=2)
  )
  (conv_last): Conv2d(64, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
)
2024-12-02 16:44:01,879 INFO: Loading IPG model from D:/GIAA5/Natalia Rdgz/IPG_CUDA/NATALIA/pths/IPG_SRx4.pth, with param key: [params].
2024-12-02 16:44:01,952 INFO: Model [IPGModel] is created.
2024-12-02 16:44:01,952 INFO: Testing CustomTestSet...
